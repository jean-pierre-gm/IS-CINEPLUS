<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.ApiAuthorization.IdentityServer" Version="5.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="5.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.0" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="5.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="5.0.0" />
        <PackageReference Include="Microsoft.OpenApi" Version="1.2.3" />
        <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="5.0.2" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.4" />
        <PackageReference Include="System.Linq.Dynamic.Core" Version="1.2.7" />
    </ItemGroup>

    <ItemGroup>
        <None Update="app.db" CopyToOutputDirectory="PreserveNewest" />
        <None Include="ClientApp\src\app\discounts\date-discount\date-discount-list.component.ts" />
        <None Include="ClientApp\src\app\discounts\date-discount\date-discount.component.ts" />
        <None Include="ClientApp\src\app\discounts\date-discount\discounts.component.ts" />
        <None Include="ClientApp\src\app\discounts\discounts.component.ts" />
        <None Include="ClientApp\src\app\role\role.module.ts" />
        <None Include="ClientApp\src\models\associate.ts" />
        <None Include="ClientApp\src\models\cineplusDataSource.ts" />
        <None Include="ClientApp\src\models\dataSourceConf.ts" />
        <None Include="ClientApp\src\models\date-discount.ts" />
        <None Include="ClientApp\src\models\datediscount.ts" />
        <None Include="ClientApp\src\models\dateDiscount.ts" />
        <None Include="ClientApp\src\models\genre.ts" />
        <None Include="ClientApp\src\models\movie.ts" />
        <None Include="ClientApp\src\models\pagination.ts" />
        <None Include="ClientApp\src\models\Role.ts" />
        <None Include="ClientApp\src\models\User.ts" />
        <None Include="ClientApp\src\models\userWithRoles.ts" />
        <None Remove="ClientApp\src\app\add-reproduction\**" />
        <None Remove="ClientApp\src\app\discounts\**" />
    </ItemGroup>
    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\src\app\api-test\api-test.component.css" />
        <Content Include="ClientApp\src\app\api-test\api-test.component.html" />
        <Content Include="ClientApp\src\app\app.component.css" />
        <Content Include="ClientApp\src\app\client-profile\become-associate\become-associate.component.css" />
        <Content Include="ClientApp\src\app\client-profile\become-associate\become-associate.component.html" />
        <Content Include="ClientApp\src\app\client-profile\client-profile.component.css" />
        <Content Include="ClientApp\src\app\client-profile\client-profile.component.html" />
        <Content Include="ClientApp\src\app\discounts\date-discount\date-discount.component.css" />
        <Content Include="ClientApp\src\app\discounts\date-discount\date-discount.component.html" />
        <Content Include="ClientApp\src\app\discounts\discounts.component.css" />
        <Content Include="ClientApp\src\app\discounts\discounts.component.html" />
        <Content Include="ClientApp\src\app\forbidden\forbidden.component.css" />
        <Content Include="ClientApp\src\app\forbidden\forbidden.component.html" />
        <Content Include="ClientApp\src\app\home\list-movies\list-movies.component.css" />
        <Content Include="ClientApp\src\app\home\list-movies\list-movies.component.html" />
        <Content Include="ClientApp\src\app\manage\manage-genres\create-genre\create-genre.component.css" />
        <Content Include="ClientApp\src\app\manage\manage-genres\create-genre\create-genre.component.html" />
        <Content Include="ClientApp\src\app\manage\manage-genres\manage-genres.component.css" />
        <Content Include="ClientApp\src\app\manage\manage-genres\manage-genres.component.html" />
        <Content Include="ClientApp\src\app\manage\manage-movies\create-movie\create-movie.component.css" />
        <Content Include="ClientApp\src\app\manage\manage-movies\create-movie\create-movie.component.html" />
        <Content Include="ClientApp\src\app\manage\manage-movies\manage-movies.component.css" />
        <Content Include="ClientApp\src\app\manage\manage-movies\manage-movies.component.html" />
        <Content Include="ClientApp\src\app\manage\manage.component.css" />
        <Content Include="ClientApp\src\app\manage\manage.component.html" />
        <Content Include="ClientApp\src\app\role\role-list\role-list.component.css" />
        <Content Include="ClientApp\src\app\role\role-list\role-list.component.html" />
        <Content Include="ClientApp\src\app\role\role-users\role-users.component.css" />
        <Content Include="ClientApp\src\app\role\role-users\role-users.component.html" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <Content Remove="ClientApp\src\app\discounts\**" />
        <Content Remove="ClientApp\src\app\add-reproduction\**" />
    </ItemGroup>
    <ItemGroup>
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\Account\Login.cshtml" />
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\Account\Logout.cshtml" />
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\Account\Register.cshtml" />
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\Account\RegisterConfirmation.cshtml" />
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\Account\_ViewImports.cshtml" />
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\_ViewImports.cshtml" />
      <_ContentIncludedByDefault Remove="Areas\Identity\Pages\_ViewStart.cshtml" />
    </ItemGroup>
    <ItemGroup>
      <Compile Remove="ClientApp\src\app\discounts\**" />
      <Compile Remove="Controllers\OrderController.cs" />
    </ItemGroup>
    <ItemGroup>
      <EmbeddedResource Remove="ClientApp\src\app\discounts\**" />
    </ItemGroup>
    <ItemGroup>
      <Compile Remove="ClientApp\src\app\add-reproduction\**" />
    </ItemGroup>
    <ItemGroup>
      <EmbeddedResource Remove="ClientApp\src\app\add-reproduction\**" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
